{"ast":null,"code":"var _jsxFileName = \"/Users/mac/React-Fundamentals-Exercises/nd0191-c1-myreads/starter/src/SearchBooks.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport Book from \"./Book\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBooks = props => {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [books, setBooks] = useState([]);\n  useEffect(() => {\n    if (query.length === 0) {\n      setBooks([]);\n    } else {\n      const getSearchBooks = async () => {\n        const response = await BooksAPI.search(query);\n      };\n\n      setBooks(!getSearchBooks().error ? getSearchBooks() : []);\n    }\n  }, [query]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-books\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-search\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-input-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by title or author\",\n          onChange: event => setQuery(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-results\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"books-grid\",\n        children: books && books.map((book, index) => /*#__PURE__*/_jsxDEV(Book, {\n          title: book.title,\n          authors: book.authors,\n          imageUrl: book.imageLinks && book.imageLinks.thumbnail,\n          bookshelf: book.shelf,\n          book: book,\n          isSearching: true\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchBooks, \"9SpY7x78ydeOQkKiCKE6Ic2FoAw=\");\n\n_c = SearchBooks;\nexport default SearchBooks;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBooks\");","map":{"version":3,"sources":["/Users/mac/React-Fundamentals-Exercises/nd0191-c1-myreads/starter/src/SearchBooks.js"],"names":["useState","useEffect","BooksAPI","Book","SearchBooks","props","query","setQuery","books","setBooks","length","getSearchBooks","response","search","error","event","target","value","map","book","index","title","authors","imageLinks","thumbnail","shelf"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,KAAK,CAACI,MAAN,KAAiB,CAArB,EAAwB;AACpBD,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,KAFD,MAEM;AACH,YAAME,cAAc,GAAG,YAAY;AAAC,cAAMC,QAAQ,GAAG,MAAMV,QAAQ,CAACW,MAAT,CAAgBP,KAAhB,CAAvB;AAA+C,OAAnF;;AACAG,MAAAA,QAAQ,CAAC,CAACE,cAAc,GAAGG,KAAlB,GAA0BH,cAAc,EAAxC,GAA6C,EAA9C,CAAR;AACF;AACF,GAPQ,EAON,CAACL,KAAD,CAPM,CAAT;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA,+BACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,2BAFd;AAGE,UAAA,QAAQ,EAAES,KAAK,IAAIR,QAAQ,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd;AAH7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAaE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,6BACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,kBACGT,KAAK,IACJA,KAAK,CAACU,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACR,QAAC,IAAD;AAEE,UAAA,KAAK,EAAED,IAAI,CAACE,KAFd;AAGE,UAAA,OAAO,EAAEF,IAAI,CAACG,OAHhB;AAIE,UAAA,QAAQ,EAAEH,IAAI,CAACI,UAAL,IAAmBJ,IAAI,CAACI,UAAL,CAAgBC,SAJ/C;AAKE,UAAA,SAAS,EAAEL,IAAI,CAACM,KALlB;AAME,UAAA,IAAI,EAAEN,IANR;AAOE,UAAA,WAAW;AAPb,WACOC,KADP;AAAA;AAAA;AAAA;AAAA,gBADF;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD,CA7CD;;GAAMhB,W;;KAAAA,W;AA+CN,eAAeA,WAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport Book from \"./Book\";\n\nconst SearchBooks = (props) => {\n  const [query, setQuery] = useState(\"\");\n  const [books, setBooks] = useState([])\n\n  useEffect(() => {\n    if (query.length === 0) {\n        setBooks([]);\n    } else{\n       const getSearchBooks = async () => {const response = await BooksAPI.search(query);};\n       setBooks(!getSearchBooks().error ? getSearchBooks() : []);\n    }\n  }, [query]);\n\n  return (\n    <div className=\"search-books\">\n      <div className=\"search-books-bar\">\n        <button className=\"close-search\">\n          Close\n        </button>\n        <div className=\"search-books-input-wrapper\">\n          <input\n            type=\"text\"\n            placeholder=\"Search by title or author\"\n            onChange={event => setQuery(event.target.value)}\n          />\n        </div>\n      </div>\n      <div className=\"search-books-results\">\n        <ol className=\"books-grid\">\n          {books &&\n            books.map((book, index) => (\n              <Book\n                key={index}\n                title={book.title}\n                authors={book.authors}\n                imageUrl={book.imageLinks && book.imageLinks.thumbnail}\n                bookshelf={book.shelf}\n                book={book}\n                isSearching\n              />\n            ))}\n        </ol>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchBooks;\n"]},"metadata":{},"sourceType":"module"}